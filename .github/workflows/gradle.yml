# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: build datetimepickers:verifyPaparazziDebug
    - name: Unit tests results
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: unit-tests-results
        path: datetimepickers/build/reports/tests/testDebugUnitTest
    - name: Process failed screenshot tests
      if: ${{ failure() }}
      id: failed-screenshots
      run: |
        chmod +x ./.github/workflows/scripts/process_failed_screenshots.sh
        ./.github/workflows/scripts/process_failed_screenshots.sh
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ secrets.GITHUB_REPOSITORY }}
        PR_BRANCH: ${{ github.head_ref }}
#    - name: Comment PR if screenshot tests failed
#      uses: octokit/request-action@v2
#      if: always() && steps.failed-screenshots.outputs.PR_COMMENT
#      with:
#        route: POST /repos/${{ github.repository }}/issues/${{ steps.failed-screenshots.outputs.PR_NUMBER }}/comments
#        body: ${{ steps.failed-screenshots.outputs.PR_COMMENT }}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment PR if screenshot tests failed
      uses: actions/github-script@v6
      if: always() && steps.failed-screenshots.outputs.PR_COMMENT
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: {{ steps.failed-screenshots.outputs.PR_COMMENT }}
          })